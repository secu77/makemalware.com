[{"content":"","date":"9 enero 2023","permalink":"/es/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"9 enero 2023","permalink":"/es/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"9 enero 2023","permalink":"/es/categories/defense-evasion/","section":"Categories","summary":"","title":"Defense Evasion"},{"content":"","date":"9 enero 2023","permalink":"/es/tags/kraken/","section":"Tags","summary":"","title":"kraken"},{"content":"","date":"9 enero 2023","permalink":"/es/series/kraken-fundamentals/","section":"Series","summary":"","title":"Kraken Fundamentals"},{"content":" Comenzamos un nuevo año y con ello se presentan nuevas oportunidades y nuevos retos!\nQuiero comenzar este 2023 presentando un proyecto en el que llevo trabajando más de un año. Y el cuál será presentado en la próxima Hackplayers Conference (Hc0n) que se celebrará los días 24 y 25 de Febrero en La Nave (Madrid).\nPara comenzar con la explicación, primero necesito \u0026ldquo;hacer un seek al inicio\u0026rdquo;, dónde comenzó todo y empezar a contar desde ahí.\nEste será el primero de una serie de posts dónde hablaré acerca de Kraken, de cómo funciona internamente y cómo puede utilizarse.\nAsí que, pilla algo para picar y… ¡comencémos!\nIntroducción\u003e Introducción # Durante uno de mis ejercicios de Red Team, conseguí comprometer varias plataformas web del perímetro del cliente. La vulnerabilidad que exploté me permitió desplegar una Webshell1 en cada uno de los servidores comprometidos.\nLa razón de desplegar una webshell en lugar de utilizar otro vector, es que se aporta tanto un vector de ejecución ( TA0002) como una forma de mantener el acceso al equipo comprometido ( TA0003).\nLlegados a este punto, iba a comenzar con la fase de reconocimiento, como bien estaba acostumbrado a hacer. No obstante, tras comentar los hallazgos con mis compañeros, se me advirtió de la posible existencia de EDR’s2 en los equipos comprometidos.\nYa que, al tratarse de máquinas expuestas a Internet (Endpoint3), debían tener una política de Hardening4 más robusta que otros equipos de la organización.\nFue en este momento cuando se me planteó el primer problema:\n¿Cómo verificar esta premisa sin llamar demasiado la atención?\n— (pues la ejecución de comandos del sistema, muy probablemente este monitorizada)\nPara dar solución a este problema, implementé rápidamente una prueba de concepto de “webshell” que me permitiera realizar operaciones básicas sobre el sistema para poder hacer la comprobación.\nTras utilizarla en uno de los equipos comprometidos, pude confirmar que, efectivamente, había en funcionamiento un agente Linux de un EDR muy conocido.\nCon esto, la situación se complicaba, pues se sabía de antemano que dicho producto detectaría cualquier intento de enumeración tradicional desde la webshell.\nY aquí se planteaba la siguiente pregunta:\n¿Cómo proceder a realizar un reconocimiento completo sin ser detectados?\nY de la respuesta a esta pregunta, nació una versión muy minimalista de lo que es hoy Kraken.\n¿Qué es Kraken?\u003e ¿Qué es Kraken? # Kraken es una herramienta que te permite controlar webshells en múltiples lenguajes de programación. Se podría decir que es algo así como un “orquestador de webshells”.\nAhora bien, el objetivo que Kraken persigue es: dar la capacidad de operar de la forma más silenciosa posible. Utilizando, para ello, todos los recursos que el lenguaje y el sistema en uso te proporcionan.\n¿Cómo funciona Kraken?\u003e ¿Cómo funciona Kraken? # El flujo de ejecución de Kraken se podría simplificar en el siguiente diagrama:\nPor un lado tenemos la parte del Cliente: que se trata de un script en Python que se puede utilizar para generar webshells y conectarse con las mismas una vez estan desplegadas.\nY por otro lado, se encuentra el Agente con el que conseguimos ejecutar los módulos que nos permitirán obtener la información que buscamos durante el proceso de reconocimiento.\nMás adelante profundizaremos en todos estos componentes que intervienen en el funcionamiento de la herramienta y el motivo por el que estan ahí.\n¿Qué lenguajes soporta Kraken?\u003e ¿Qué lenguajes soporta Kraken? # Actualmente, Kraken soporta:\nPHP (para servicios web en PHP) Java (para JSP) .NET (para ASPX) Obviamente esto es sólo una parte de todas las tecnologías web disponibles actualmente, no obstante, se ha optado por cubrir estas tres, ya que son las más habituales y me permite abordar mejor los problemas que van surgiendo durante el desarrollo.\nPues\u0026hellip; el que mucho abarca, poco aprieta.\n— Refranero popular\nPor otro lado, los agentes o webshells de Kraken, se han probado en los sistemas operativos:\nWindows (en diferentes versiones) Linux (en diferentes distribuciones) Entonces, una pregunta que surge (o lleva desde el inicio presente) es la siguiente:\n¿Qué lo hace diferente de otras webshells conocidas?\u003e ¿Qué lo hace diferente de otras webshells conocidas? # Kraken reune un conjunto de características que han sido pensadas para mejorar el uso de la herramienta y aportar una visión diferente del uso de las webshells. Algunas de las características que la hacen diferente a otras herramientas son:\nSe evita la ejecución de comandos del sistema (su característica principal y el propósito por el que se desarrolló). Esta propiedad la hace muy útil en sistemas donde hay una monitorización activa o existen soluciones de seguridad que pueden detectar nuestra presencia. Su diseño modular presenta algunas ventajas y fortalezas frente a otras herramientas:\nPermite manter un sistema de multi-versión con el cual, se determina en tiempo de ejecución, aquellos módulos que pueden cargarse en función de la información que reporta el agente con el que se comunica. La jerarquía elegida para el sistema de módulos permite la edicción en caliente de los módulos en uso. De igual forma, es posible registrar módulos sin detener la ejecución del programa. El desarrollo de cada módulo busca conseguir explotar al máximo las características del lenguaje para conseguir la mejor recreación de los comandos a los que se calca. Esto tiende a generar módulos más grandes pero con mejores resultados. Las plantillas que se proporcionan para cada lenguaje, hacen que resulte sencillo extender la funcionalidad de Kraken y crear nuevos módulos. Al tratarse los módulos como archivos, se evita la \u0026ldquo;duplicidad\u0026rdquo; de los mismos a partir del uso de enlaces simbólicos (para casos en los que la implementación no varía dependiendo de la versión). Kraken proporciona un sistema de Cross-Compiling sin dependencias añadidas que permite que, para los casos en los que sea necesario, se puedan compilar los módulos sin necesidad de preocuparse de disponer de los requerimientos instalados en la máquina. Esto se ha conseguido gracias a la integración con Docker5.\nActualmente, existen dos modos de utilizar Kraken:\nEl Modo \u0026ldquo;Standard\u0026rdquo; (ST): que es el modo tradicional del que funcionan las webshells (estilo petición-invocación-respuesta). El Modo \u0026ldquo;Command-and-Control\u0026rdquo; (C2): cuyo funcionamiento es similar al de un C2 utilizando el método de carga-invocación-descarga de módulos utilizando variables de sesión (se entrará en detalle en futuros posts). Flexibilidad en la comunicación mediante el uso de perfiles de conexión. Es posible detallar toda la información acerca de cómo va a ser la comunicación entre cliente y agente a partir de un archivo JSON que sigue un esquema concreto.\nAdiccionalmente, Kraken también proporciona utilidades como:\nUna pseudo-terminal con las capacidades básicas de una consola. Control de errores en Agentes, Módulos y Cliente. Sistema de Logging e Histórico integrados. Y otras utilidades relacionadas con la herramienta. Conclusiones\u003e Conclusiones # Con esto llegamos al final de la primera parte. En los siguientes post profundizaré acerca de la estructura interna de Kraken, los elementos que infieren en su funcionamiento así como ejemplos prácticos de uso. Así que ¡no te pierdas lo que esta por venir!\nEspero que te haya gustado y ¡nos vemos pronto!\n¿Qué es una Webshell? : https://www.imperva.com/learn/application-security/web-shell/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n¿Qué es un EDR? : https://www.crowdstrike.com/cybersecurity-101/endpoint-security/endpoint-detection-and-response-edr/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n¿Qué es un Endpoint? : https://www.paloaltonetworks.com/cyberpedia/what-is-an-endpoint\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n¿Qué es el Hardening? : https://www.beyondtrust.com/resources/glossary/systems-hardening\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n¿Qué es Docker? : https://www.docker.com/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 enero 2023","permalink":"/es/posts/kraken-fundamentals-1/","section":"Posts","summary":"Kraken es una herramienta para orquestar webshells desarrolladas en PHP, Java y .NET. Este es el primer post de la serie Kraken Fundamentals, donde hablaremos acerca de cómo esta diseñada y cómo funciona la herramienta.","title":"Kraken Fundamentals - I"},{"content":"","date":"9 enero 2023","permalink":"/es/","section":"MakeMalware","summary":"","title":"MakeMalware"},{"content":"","date":"9 enero 2023","permalink":"/es/categories/persistence/","section":"Categories","summary":"","title":"Persistence"},{"content":"","date":"9 enero 2023","permalink":"/es/tags/redteam/","section":"Tags","summary":"","title":"redteam"},{"content":"","date":"9 enero 2023","permalink":"/es/authors/secu/","section":"Authors","summary":"","title":"secu"},{"content":"","date":"9 enero 2023","permalink":"/es/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"9 enero 2023","permalink":"/es/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"9 enero 2023","permalink":"/es/tags/webshell/","section":"Tags","summary":"","title":"webshell"},{"content":"","date":"9 enero 2023","permalink":"/es/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"Desde que empecé en el mundo de la seguridad, no he dejado de investigar, desarrollar y compartir. A continuación encontrarás algunos de los proyectos e investigaciones a los que más tiempo he dedicado.\nHerramientas\u003e Herramientas Logo Título Descripción Enlace Kraken Una webshell modular y multi-lenguaje. repositorio Mistica Una navaja suiza de código abierto para la comunicación arbitraria a través de protocolos de aplicación. repositorio Conferencias\u003e Conferencias Logo Título Tipo Descripción Hc0n, 2023 Charla Kraken - una webshell modular y multi-lenguaje Navaja Negra, 2022 Taller Diseña y despliega tu propia infraestructura privada BlackHat Arsenal, 2022 Charla Mística: Cualquier cosa es un túnel si eres lo suficientemente valiente - ¡Canales encubiertos para todos! Bitup Alicante, 2020 Charla Canales encubiertos con Mistica Otros\u003e Otros Logo Title Description Link LAB.LOCAL A fictitious example of the design and implementation of an organization's Infrastructure. repository CiberReserva Bitup Alicante 2021 CTF Final Challenge, which simulates a Red Team exercise. repository ","date":"27 diciembre 2022","permalink":"/es/projects/","section":"MakeMalware","summary":"Desde que empecé en el mundo de la seguridad, no he dejado de investigar, desarrollar y compartir. A continuación encontrarás algunos de los proyectos e investigaciones a los que más tiempo he dedicado.","title":"Proyectos"},{"content":"Experiencia\u003e Experiencia Empresa Enlace Rol Fecha Localización BlackArrow (Tarlogic) Analísta de Red Team 10/2021 - 12/2022 Madrid, ES INCIDE Digital Data SL Analísta de Red Team 02/2019 - 10/2021 Barcelona, ES ZATACA SYSTEMS, S.L Consultor de ciberseguridad 01/2018 - 10/2018 Elche, ES BitUp Alicante Co-organizador de Comunidad de Ciberseguridad 10/2017 - 10/2021 Alicante, ES Certificaciones\u003e Certificaciones Logo Empresa Certificación Fecha Pentester Academy Certified Red Team Expert (CRTE) 03/2022 Offensive Security Offensive Security Certified Proffesional (OSCP) 07/2021 Educación\u003e Educación Centro Enlace Titulación Fecha Universidad Internacional de La Rioja Ingeniería Informática 2020 - Present Universidad de Alicante Ingeniería Informática 2016 - 2020 ","date":"27 diciembre 2022","permalink":"/es/resume/","section":"MakeMalware","summary":"Experiencia\u003e Experiencia Empresa Enlace Rol Fecha Localización BlackArrow (Tarlogic) Analísta de Red Team 10/2021 - 12/2022 Madrid, ES INCIDE Digital Data SL Analísta de Red Team 02/2019 - 10/2021 Barcelona, ES ZATACA SYSTEMS, S.","title":"Resumen"},{"content":"Me llamo Raúl Caro Teixidó (aka Secu) y me encanta desarrollar, investigar y romper todo tipo de cosas relacionadas con la ciberseguridad.\nEmpecé en el mundo de la seguridad en el 2017, cuando estaba en el instituto y tenía mucho tiempo para leer y aprender. En 2018 comencé mi primer trabajo como consultor de Ciberseguridad, y a día de hoy sumo más de 4 años de experiencia trabajando como Analista de Red Team (Incide y Blackarrow).\nActualmente, dedico mi tiempo libre a mejorar/crear herramientas que me puedan ser útiles en mi trabajo, así como mejorar mis habilidades en Red Team. Me gusta compartir lo que aprendo pues\u0026hellip; a fin de cuentas\u0026hellip;\n¿No somos todos fruto de lo que hemos aprendido de los demás?\nPara cualquier cosa, no dudes en ponerte en contacto conmigo a través de mi Twitter o por Linkedin.\n","date":"27 diciembre 2022","permalink":"/es/about/","section":"MakeMalware","summary":"Me llamo Raúl Caro Teixidó (aka Secu) y me encanta desarrollar, investigar y romper todo tipo de cosas relacionadas con la ciberseguridad.\nEmpecé en el mundo de la seguridad en el 2017, cuando estaba en el instituto y tenía mucho tiempo para leer y aprender.","title":"Sobre mi"}]