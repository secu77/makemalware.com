<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>secu on MakeMalware</title>
    <link>https://makemalware.com/es/authors/secu/</link>
    <description>Recent content in secu on MakeMalware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>© Copyright 2022 - MakeMalware</copyright>
    <lastBuildDate>Tue, 17 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://makemalware.com/es/authors/secu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kraken Fundamentals - II</title>
      <link>https://makemalware.com/es/posts/kraken-fundamentals-2/</link>
      <pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://makemalware.com/es/posts/kraken-fundamentals-2/</guid>
      <description>Dos piezas fundamentales en la lógica de Kraken son los Módulos y los Agentes. A través de estos componentes, se entenderá como Kraken realiza la ejecución de código y aprovecha su diseño y arquitectura para aportar al operador cierta flexibilidad y comodidad durante la fase de post-explotación.</description>
    </item>
    
    <item>
      <title>Kraken Fundamentals - I</title>
      <link>https://makemalware.com/es/posts/kraken-fundamentals-1/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://makemalware.com/es/posts/kraken-fundamentals-1/</guid>
      <description>Kraken es una herramienta para orquestar webshells desarrolladas en PHP, Java y .NET. Este es el primer post de la serie Kraken Fundamentals, donde hablaremos acerca de cómo esta diseñada y cómo funciona la herramienta.</description>
    </item>
    
  </channel>
</rss>
